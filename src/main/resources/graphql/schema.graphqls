type Query {
    getAllProductsActive: [Product]
    getAllProductsActiveByCategoryId(categoryId: String!): [Product]
    getProductById(id: String!): Product
    getAllProductsActiveByName(name: String!): [Product]

    getAllCategoriesActive: [Category]
}

type Mutation {
    addProduct(input: InputProductRequest): Product

    createOrder(input: InputOrderRequest!): String
}

type Product {
    id: ID!
    name: String!
    price: Float!
    description: String
    status: String!
    createdAt: String!
    updatedAt: String!
    discount: Int
    category: Category!
    imagesUrl: [String]
    colors: [String]
    sizes: [String]
}

type Category {
    id: ID!
    name: String!
    status: String!
}

input InputProductRequest {
    name: String!
    price: Float!
    description: String
    categoryId: Int!
    discount: Int
    imagesUrl: [String]
    colors: [String]
    sizes: [String]
}

input InputOrderProductRequest {
    quantity: Int!
    productId: ID!
    color: String
    size: String
}

input InputOrderRequest {
    emailCustomer: String!
    address: String!
    city: String!
    description: String!
    paymentMethod: String!
    products: [InputOrderProductRequest]
}